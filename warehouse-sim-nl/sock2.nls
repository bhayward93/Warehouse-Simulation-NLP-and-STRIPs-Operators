to connect-clojure
  sock2:connect-local port-number
end

to read
  let text sock2:read
  show (text)
end

to send [message]
    sock2:write (word message)
end

to send-world-state
  let world-state ""
  let dynamic-state "" 

  ask patches[
    
    ifelse (count turtles-here != 0)[
      ask turtles-here[
         if (is-bay? self or is-shelf? self)  ;send worldstate here
           [set world-state (word world-state "(at '("pxcor " " pycor ")" self ")")]
         if is-collectable? self
           [set dynamic-state (word dynamic-state "(at '("pxcor " " pycor ")" item-type" "who")")]  
         if is-forklift? self
           [set dynamic-state (word dynamic-state "(at '("pxcor " " pycor ")" self ")")]
        ]
      ]
      [set dynamic-state (word dynamic-state "(at '("pxcor " " pycor ") none)")]
    
    
    
      let originalpx pxcor
      let originalpy pycor
    
;could create an agentset(?) of neighbors
      ask neighbors4[ ;connections
          set world-state (word world-state "(connects '("originalpx" "originalpy") '("pxcor" "pycor"))")
      ]
   ]
   
   send world-state ;INTERLEAVING!!
   wait 5.0
   send dynamic-state
  

end
